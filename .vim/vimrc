let mapleader = "\<Space>"
set nocompatible
set t_Co=256

set noswapfile
set showcmd
set laststatus=2
set number
set relativenumber
set ruler
set path+=**
set wildmenu
set wildmode=longest:full,full
set foldmethod=indent
set foldtext=
set foldlevelstart=99
set ignorecase
set smartcase
set hidden
set splitbelow
set splitright
set nobackup
set nowritebackup
set shortmess+=c
set updatetime=300
set timeoutlen=2000
"set noto
set virtualedit=all
syntax on
set background=light
set listchars=eol:$,space:-,tab:>#,trail:~
colorscheme PaperColor

"""" identation """"
filetype plugin indent on
set autoindent
set shiftwidth=8
set softtabstop=8
set tabstop=8
set expandtab

"""" search """"
"set hlsearch
set incsearch
nnoremap <Leader>w /\s\+$<Enter>
nnoremap <Leader>W :%s/\s\+$//g<Enter>
nnoremap <leader>mm :execute 'match Error /\<' . expand('<cword>') . '\>/'<CR>
nnoremap <leader>mn :match none<CR>

"""" windows """""
nnoremap <C-h> <C-W>h
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-l> <C-W>l
nnoremap <C-c> <C-W>c

"""" cscope """"
set cscoperelative

"""" netrw """"
let g:netrw_browse_split=4
let g:netrw_winsize=20

"""" sneak """"
let g:sneak#label = 1

"""" lightline """"
let g:lightline = {
    \   'colorscheme': 'PaperColor',
    \   'active': {
    \       'left': [ [ 'mode', 'paste' ],
    \                 [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \   },
    \   'inactive': {
    \       'left': [ [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \   },
    \ }


"""" Fkeys """"
noremap <F1> <Esc>:NERDTreeToggle<Enter>
noremap <F2>  <ESC>:set relativenumber!<CR>
noremap <F3>  <ESC>:set hls!<CR>
noremap <F12>  <ESC>:set list!<CR>

map <Leader>gg :GitGutterBufferToggle<Enter>
map <Leader>gu :GitGutterUndoHunk<Enter>
map <Leader>G :GitGutterEnable<Enter>

"""" syntax """"
hi cConstant        cterm=NONE ctermfg=Black
hi cIdentifier      cterm=NONE ctermfg=Black
hi cFunction        cterm=NONE ctermfg=Black
hi cStatement       cterm=NONE ctermfg=Black
hi cPreProc         cterm=NONE ctermfg=Black
hi cType	        cterm=NONE ctermfg=Black
hi cSpecial         cterm=NONE ctermfg=Black
hi cDelimiter       cterm=NONE ctermfg=Black
hi cRepeat          cterm=NONE ctermfg=Black
hi cNumber          cterm=NONE ctermfg=Black
hi cStorageClass    cterm=NONE ctermfg=Black
hi cIncluded        cterm=NONE ctermfg=Black
hi cStructure       cterm=NONE ctermfg=Black
hi cConditional     cterm=NONE ctermfg=Black
hi cLabel           cterm=NONE ctermfg=Black
hi cOperator        cterm=NONE ctermfg=Black

source ~/.vim/coc.vim
set tagfunc=CocTagFunc

let g:ctrlp_map = ''
nnoremap <leader>; :CtrlPBuffer<cr>
nnoremap <leader>[ :CtrlPLine<cr>
nnoremap <leader>' :CtrlP<cr>
let g:ctrlp_working_path_mode = ''
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.git|Debug.*|docs|.*bin)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }

if &diff
     function! IwhiteToggle()
       if &diffopt =~ 'iwhite'
         set diffopt-=iwhite
       else
         set diffopt+=iwhite
       endif
     endfunction
     map gs :call IwhiteToggle()<CR>
 endif



set wildignore+=*.o,*.ko,*.o.cmd
set wildignore+=build

